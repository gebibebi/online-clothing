const express = require("express");
const Product = require("../models/Product");
const auth = require("../middleware/authMiddleware");
const checkAdmin = require("../middleware/checkAdmin");

const router = express.Router();

// ‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –≤–∏–¥–µ—Ç—å —Ç–æ–≤–∞—Ä—ã
router.get("/", async (req, res) => {
  const products = await Product.find();
  res.json(products);
});

// üö® –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
router.post("/", auth, checkAdmin, async (req, res) => {
  try {
    const { name, price, category, stock, size, brand, color, material, release_date } = req.body;

    const product = new Product({
      product_id: Date.now(), // ‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
      name,
      category,
      price,
      stock,
      size: size || null, // üü° –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
      brand: brand || null,
      color: color || null,
      material: material || null,
      release_date: release_date || null
    });

    await product.save();
    res.status(201).json({ message: "–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω", product });

  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: " + error.message });
  }
});

// üö® –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä
router.put("/:id", auth, checkAdmin, async (req, res) => {
  try {
    const { name, price, category, stock, size, brand, color, material, release_date } = req.body;

    const updatedProduct = await Product.findByIdAndUpdate(
      req.params.id,
      {
        name,
        category,
        price,
        stock,
        size: size || null, // üü° –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
        brand: brand || null,
        color: color || null,
        material: material || null,
        release_date: release_date || null
      },
      { new: true } // ‚úÖ –í–µ—Ä–Ω—ë—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
    );

    if (!updatedProduct) {
      return res.status(404).json({ message: "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    res.json({ message: "–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω", updatedProduct });

  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: " + error.message });
  }
});

// üö® –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä
router.delete("/:id", auth, checkAdmin, async (req, res) => {
  try {
    const deletedProduct = await Product.findByIdAndDelete(req.params.id);
    if (!deletedProduct) {
      return res.status(404).json({ message: "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }
    res.json({ message: "–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω" });

  } catch (error) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: " + error.message });
  }
});

module.exports = router;
